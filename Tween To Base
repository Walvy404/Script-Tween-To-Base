-- ðŸ§  WALVY: Tween To Base (WindUI Integration)
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local PathfindingService = game:GetService("PathfindingService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

local tweenSpeed = 80
local float = Instance.new("BodyVelocity")
float.MaxForce = Vector3.new(1e6, 1e6, 1e6)
float.Velocity = Vector3.new(0, 0, 0)

-- Helper
local function buyItem(itemID)
    pcall(function()
        game:GetService("ReplicatedStorage"):WaitForChild("Packages")
        :WaitForChild("Net"):WaitForChild("RF/CoinsShopService/RequestBuy"):InvokeServer(itemID)
    end)
end

local function toggleSpeedCoilEquip()
    local backpack = player:WaitForChild("Backpack")
    local char = player.Character or player.CharacterAdded:Wait()
    local equipped = char:FindFirstChild("Speed Coil")
    if equipped then
        equipped.Parent = backpack
    else
        local coil = backpack:FindFirstChild("Speed Coil")
        if coil then
            coil.Parent = char
        end
    end
end

local function buyAndEquipSpeedCoil()
    buyItem("Speed Coil")
    task.wait(1)
    toggleSpeedCoilEquip()
end

-- Respawn reconnect
player.CharacterAdded:Connect(function(c)
	character = c
	hrp = c:WaitForChild("HumanoidRootPart")
	humanoid = c:WaitForChild("Humanoid")
end)

-- Anti Death
local healthConn
local function applyAntiDeath(state)
	if humanoid then
		for _, s in ipairs({
			Enum.HumanoidStateType.FallingDown,
			Enum.HumanoidStateType.Ragdoll,
			Enum.HumanoidStateType.PlatformStanding,
			Enum.HumanoidStateType.Seated
		}) do
			humanoid:SetStateEnabled(s, not not state)
		end
		if state then
			humanoid.Health = humanoid.MaxHealth
			if healthConn then healthConn:Disconnect() end
			healthConn = humanoid:GetPropertyChangedSignal("Health"):Connect(function()
				if humanoid.Health <= 0 then
					humanoid.Health = humanoid.MaxHealth
				end
			end)
		else
			if healthConn then healthConn:Disconnect() end
		end
	end
end

local active = false
local currentTween
local walkThread

local function getBasePosition()
	local plots = workspace:FindFirstChild("Plots")
	if not plots then return nil end
	for _, plot in ipairs(plots:GetChildren()) do
		local sign = plot:FindFirstChild("PlotSign")
		local base = plot:FindFirstChild("DeliveryHitbox")
		if sign and base and sign:FindFirstChild("YourBase") and sign.YourBase.Enabled then
			return base.Position
		end
	end
	return nil
end

local function tweenTo(pos)
	if not hrp then return end
	if currentTween then currentTween:Cancel() end
	local dist = (hrp.Position - pos).Magnitude
	local duration = dist / tweenSpeed
	currentTween = TweenService:Create(hrp, TweenInfo.new(duration, Enum.EasingStyle.Linear), {CFrame = CFrame.new(pos)})
	currentTween:Play()
	currentTween.Completed:Wait()
end

local function walkToBase()
	while active do
		local target = getBasePosition()
		if target then
			local path = PathfindingService:CreatePath()
			path:ComputeAsync(hrp.Position, target)

			if path.Status == Enum.PathStatus.Success then
				for _, wp in ipairs(path:GetWaypoints()) do
					if not active then return end
					tweenTo(wp.Position + Vector3.new(0, 6, 0))
				end
			else
				tweenTo(target + Vector3.new(0, 6, 0))
			end
			task.wait(1.5)
		else
			task.wait(1)
		end
	end
end

-- Shortcut keys
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.T then
		active = not active
		if active then
			buyAndEquipSpeedCoil()
			applyAntiDeath(true)
			humanoid.WalkSpeed = 0
			float.Parent = hrp
			walkThread = task.spawn(walkToBase)
		else
			if walkThread then task.cancel(walkThread) end
			if currentTween then currentTween:Cancel() end
			float.Parent = nil
			applyAntiDeath(false)
			humanoid.WalkSpeed = 16
		end
	end
	if input.KeyCode == Enum.KeyCode.K then
		toggleSpeedCoilEquip()
	end
end)

-- MAIN TOGGLE FUNCTION FOR WINDUI
return function(state)
	active = state
	if active then
		buyAndEquipSpeedCoil()
		applyAntiDeath(true)
		humanoid.WalkSpeed = 0
		float.Parent = hrp
		walkThread = task.spawn(walkToBase)
	else
		if walkThread then task.cancel(walkThread) end
		if currentTween then currentTween:Cancel() end
		float.Parent = nil
		applyAntiDeath(false)
		humanoid.WalkSpeed = 16
	end
end
