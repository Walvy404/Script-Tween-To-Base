local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local PathfindingService = game:GetService("PathfindingService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- GUI
local guiName = "TweenToBaseGUI_Walvy"
local oldGui = CoreGui:FindFirstChild(guiName)
if oldGui then oldGui:Destroy() end

local gui = Instance.new("ScreenGui", CoreGui)
gui.Name = guiName
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 200, 0, 100)
frame.Position = UDim2.new(0, 300, 0, 200)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true

local toggleBtn = Instance.new("TextButton", frame)
toggleBtn.Size = UDim2.new(1, 0, 0, 40)
toggleBtn.Position = UDim2.new(0, 0, 0, 0)
toggleBtn.Text = "Start Tween"
toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 16

local status = Instance.new("TextLabel", frame)
status.Size = UDim2.new(1, 0, 0, 30)
status.Position = UDim2.new(0, 0, 0, 45)
status.Text = "Status: Idle"
status.BackgroundTransparency = 1
status.TextColor3 = Color3.new(1, 1, 1)
status.Font = Enum.Font.Gotham
status.TextSize = 14

-- Setup
local float = Instance.new("BodyVelocity")
float.MaxForce = Vector3.new(1e6, 1e6, 1e6)
float.Velocity = Vector3.new(0, 0, 0)

local function buyItem(itemID)
    pcall(function()
        game:GetService("ReplicatedStorage"):WaitForChild("Packages")
        :WaitForChild("Net"):WaitForChild("RF/CoinsShopService/RequestBuy"):InvokeServer(itemID)
    end)
end

local function toggleSpeedCoilEquip()
    local backpack = player:WaitForChild("Backpack")
    local char = player.Character or player.CharacterAdded:Wait()
    local equipped = char:FindFirstChild("Speed Coil")
    if equipped then
        equipped.Parent = backpack
    else
        local coil = backpack:FindFirstChild("Speed Coil")
        if coil then
            coil.Parent = char
        end
    end
end

local function buyAndEquipSpeedCoil()
    buyItem("Speed Coil")
    task.wait(1)
    toggleSpeedCoilEquip()
end

player.CharacterAdded:Connect(function(c)
	character = c
	hrp = c:WaitForChild("HumanoidRootPart")
	humanoid = c:WaitForChild("Humanoid")
end)

-- Anti Death
local healthConn
local function applyAntiDeath(state)
	if humanoid then
		for _, s in ipairs({
			Enum.HumanoidStateType.FallingDown,
			Enum.HumanoidStateType.Ragdoll,
			Enum.HumanoidStateType.PlatformStanding,
			Enum.HumanoidStateType.Seated
		}) do
			humanoid:SetStateEnabled(s, not not state)
		end
		if state then
			humanoid.Health = humanoid.MaxHealth
			if healthConn then healthConn:Disconnect() end
			healthConn = humanoid:GetPropertyChangedSignal("Health"):Connect(function()
				if humanoid.Health <= 0 then
					humanoid.Health = humanoid.MaxHealth
				end
			end)
		else
			if healthConn then healthConn:Disconnect() end
		end
	end
end

local tweenSpeed = 80
local active = false
local currentTween
local walkThread

local function getBasePosition()
	local plots = workspace:FindFirstChild("Plots")
	if not plots then return nil end
	for _, plot in ipairs(plots:GetChildren()) do
		local sign = plot:FindFirstChild("PlotSign")
		local base = plot:FindFirstChild("DeliveryHitbox")
		if sign and base and sign:FindFirstChild("YourBase") and sign.YourBase.Enabled then
			return base.Position
		end
	end
	return nil
end

local function tweenTo(pos)
	if not hrp then return end
	if currentTween then currentTween:Cancel() end
	local dist = (hrp.Position - pos).Magnitude
	local duration = dist / tweenSpeed
	currentTween = TweenService:Create(hrp, TweenInfo.new(duration, Enum.EasingStyle.Linear), {CFrame = CFrame.new(pos)})
	currentTween:Play()
	currentTween.Completed:Wait()
end

local function walkToBase()
	while active do
		local target = getBasePosition()
		if target then
			local path = PathfindingService:CreatePath()
			path:ComputeAsync(hrp.Position, target)

			if path.Status == Enum.PathStatus.Success then
				for _, wp in ipairs(path:GetWaypoints()) do
					if not active then return end
					tweenTo(wp.Position + Vector3.new(0, 6, 0))
				end
			else
				tweenTo(target + Vector3.new(0, 6, 0))
			end
			task.wait(1.5)
		else
			task.wait(1)
		end
	end
end

-- START / STOP FUNCTION
local function toggleTween(state)
	active = state
	toggleBtn.Text = active and "Stop Tween" or "Start Tween"
	status.Text = active and "Status: Running" or "Status: Idle"

	if active then
		buyAndEquipSpeedCoil()
		applyAntiDeath(true)
		humanoid.WalkSpeed = 0
		float.Parent = hrp
		walkThread = task.spawn(walkToBase)
	else
		if walkThread then task.cancel(walkThread) end
		if currentTween then currentTween:Cancel() end
		float.Parent = nil
		applyAntiDeath(false)
		humanoid.WalkSpeed = 16
	end
end

-- BUTTON CLICK
toggleBtn.MouseButton1Click:Connect(function()
	toggleTween(not active)
end)

-- SHORTCUT KEY
UserInputService.InputBegan:Connect(function(input, gp)
	if gp then return end
	if input.KeyCode == Enum.KeyCode.T then
		toggleTween(not active)
	elseif input.KeyCode == Enum.KeyCode.K then
		toggleSpeedCoilEquip()
	end
end)

-- MAIN WINDUI TOGGLE CALLBACK
return function(state)
	toggleTween(state)
end
